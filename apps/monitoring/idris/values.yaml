## Configuration for alertmanager
## ref: https://prometheus.io/docs/alerting/alertmanager/
##
alertmanager:
  ## Storage is the definition of how storage will be used by the Alertmanager instances.
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/storage.md
  ##
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: tank-zfspv
        accessModes: ['ReadWriteOnce']
        resources:
          requests:
            storage: 10Gi

  ## The external URL the Alertmanager instances will be available under. This is necessary to generate correct URLs. This is necessary if Alertmanager is not served from root of a DNS name. string  false
  ##
  externalUrl: 'https://alertmanager.wesl.io'

## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
##
grafana:
  enabled: true
  namespaceOverride: ''

  ## ForceDeployDatasources Create datasource configmap even if grafana deployment has been disabled
  ##
  forceDeployDatasources: false

  ## ForceDeployDashboard Create dashboard configmap even if grafana deployment has been disabled
  ##
  forceDeployDashboards: false

  ## Deploy default dashboards
  ##
  defaultDashboardsEnabled: true

  ## Timezone for the default dashboards
  ## Other options are: browser or a specific timezone, i.e. Europe/Luxembourg
  ##
  defaultDashboardsTimezone: Europe/Amsterdam

  admin:
    existingSecret: grafana
    userKey: username
    passwordKey: password

  envValueFrom:
    POSTGRES_USER:
      secretKeyRef:
        key: grafana-user
        name: postgres
    POSTGRES_PASSWORD:
      secretKeyRef:
        key: grafana-pass
        name: postgres

  ## Configure additional grafana datasources (passed through tpl)
  ## ref: http://docs.grafana.org/administration/provisioning/#datasources
  additionalDataSources: []

  plugins:
    - grafana-piechart-panel

  extraSecretMounts:
    - name: grafana
      secretName: grafana
      defaultMode: 0440
      mountPath: /etc/secrets/auth_generic_oauth
      readOnly: true

  grafana.ini:
    server:
      root_url: https://grafana.wesl.io/
    auth.generic_oauth:
      enabled: true
      name: Keycloak
      allow_sign_up: true
      scopes: profile email groups
      auth_url: https://keycloak.wesl.io/realms/master/protocol/openid-connect/auth
      token_url: https://keycloak.wesl.io/realms/master/protocol/openid-connect/token
      api_url: https://keycloak.wesl.io/realms/master/protocol/openid-connect/userinfo
      client_id: grafana
      client_secret: $__file{/etc/secrets/auth_generic_oauth/oauth-secret}
      role_attribute_path: contains(groups[*], 'grafana-admins') && 'Admin' || 'Viewer'

kubeEtcd:
  service:
    port: 2381
    targetPort: 2381

## Deploy a Prometheus instance
##
prometheus:
  enabled: true

  ## Settings affecting prometheusSpec
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#prometheusspec
  ##
  prometheusSpec:
    ## External URL at which Prometheus will be reachable.
    ##
    externalUrl: 'https://prometheus.wesl.io'

    ## Prometheus StorageSpec for persistent data
    ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/storage.md
    ##
    storageSpec:
      ## Using PersistentVolumeClaim
      ##
      volumeClaimTemplate:
        spec:
          storageClassName: tank-zfspv
          accessModes: ['ReadWriteOnce']
          resources:
            requests:
              storage: 50Gi
    #    selector: {}
